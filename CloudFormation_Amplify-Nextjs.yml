AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation test

Parameters:
  ParamTagName:
    Type: String
    Default: dev-testpj2
  ParamAmi:
    Type: String
    Default: ami-03c28b28e81872cfd
    Description: ami-07b4f72c4c356c19d = Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type(arm)
  ParamInstanceType:
    Type: String
    Default: m6g.medium
  ParamKeyName:
    Description: ssh key
    Type: AWS::EC2::KeyPair::KeyName
    Default: dev-testpj

Resources:
  # ------------------------------------------------------------#
  #  VPC
  # ------------------------------------------------------------#
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-vpc
  # ----------------------------------------------------------- #
  #  Internet Gateway
  # ----------------------------------------------------------- #
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-igw
  # ----------------------------------------------------------- #
  #  Attach Gateway
  # ----------------------------------------------------------- #
  MyAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway
  # ----------------------------------------------------------- #
  #  Route Table
  # ----------------------------------------------------------- #
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: MyAttachGateway
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${ParamTagName}-rt
  # ----------------------------------------------------------- #
  #  Route
  # ----------------------------------------------------------- #
  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: MyAttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway
  # ----------------------------------------------------------- #
  #  Public Subnet
  # ----------------------------------------------------------- #
  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: MyAttachGateway
    Properties:
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${ParamTagName}-pubsubnet
  # ----------------------------------------------------------- #
  #  Public Subnet RouteTable Association
  # ----------------------------------------------------------- #
  MyPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyRouteTable
  # ----------------------------------------------------------- #
  #  Security Group
  # ----------------------------------------------------------- #
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${ParamTagName}-sg
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-sg
  # ----------------------------------------------------------- #
  #  IAM Role(Amplify user)
  # ----------------------------------------------------------- #
  MyAmplifyUser:
    Type: AWS::IAM::User
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeCommitPowerUser
        - arn:aws:iam::aws:policy/AdministratorAccess-Amplify
      Path: /
      UserName: !Sub ${ParamTagName}-amplify-user
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-amplify-user
  # ----------------------------------------------------------- #
  #  IAM User AccessKey(Amplify user)
  # ----------------------------------------------------------- #
  MyAmplifyUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref MyAmplifyUser
  # ----------------------------------------------------------- #
  #  IAM User AccessKey Secret(Amplify user)
  # ----------------------------------------------------------- #
  MyAmplifyUserAccessKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ParamTagName}-amplify-user-credentials
      SecretString: !Sub "{\"accessKeyId\":\"${MyAmplifyUserAccessKey}\",\"secretAccessKey\":\"${MyAmplifyUserAccessKey.SecretAccessKey}\"}"
  # ----------------------------------------------------------- #
  #  IAM Role
  # ----------------------------------------------------------- #
  MyIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ParamTagName}-role
      Description: for SSM, CodeCommit
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSCodeCommitPowerUser
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-role
  # ----------------------------------------------------------- #
  #  Instance Profile
  # ----------------------------------------------------------- #
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref MyIAMRole
      InstanceProfileName: !Sub ${ParamTagName}-ip
  # ----------------------------------------------------------- #
  #  Launch Template
  # ----------------------------------------------------------- #
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${ParamTagName}-lt
      LaunchTemplateData: 
        ImageId: !Ref ParamAmi
        InstanceType: !Ref ParamInstanceType
        Monitoring: 
          Enabled: true
        KeyName: !Ref ParamKeyName
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId: !Ref MyPublicSubnet
            Groups:
              - !Ref MySecurityGroup
        BlockDeviceMappings:
          - Ebs:
              VolumeSize: 24
              VolumeType: gp3
              DeleteOnTermination: true
            DeviceName: /dev/xvda
        UserData:
          Fn::Base64: |
            #!/bin/bash
            yum -y update

            # install node@16.13.0
            curl -fsSL https://rpm.nodesource.com/setup_16.x | bash -
            yum install nodejs -y
            npm upgrade -g npm

            # install git
            yum install git -y
            su ec2-user -c "git config --global init.defaultBranch main"
            su ec2-user -c "git config --global credential.helper '!aws codecommit credential-helper $@'"
            su ec2-user -c "git config --global credential.UseHttpPath true"

            # install amplify cli
            echo ===== install amplify cli =====
            su ec2-user -c "npm install -g @aws-amplify/cli"

            # swap
            SWAPFILENAME=/swap.img
            MEMSIZE=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
            if [ $MEMSIZE -lt 2097152 ]; then
              SIZE=$((MEMSIZE * 2))k
            elif [ $MEMSIZE -lt 8388608 ]; then
              SIZE=${MEMSIZE}k
            elif [ $MEMSIZE -lt 67108864 ]; then
              SIZE=$((MEMSIZE / 2))k
            else
              SIZE=4194304k
            fi
            fallocate -l $SIZE $SWAPFILENAME && mkswap $SWAPFILENAME && chmod 600 $SWAPFILENAME && swapon $SWAPFILENAME
            echo "${SWAPFILENAME}  swap  swap  defaults 0 0" >> /etc/fstab
        TagSpecifications:
          - ResourceType: volume
            Tags: 
              - Key: Name
                Value: !Sub ${ParamTagName}-ebs
  # ----------------------------------------------------------- #
  #  EC2
  # ----------------------------------------------------------- #
  MyEC2:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      IamInstanceProfile: !Ref MyInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${ParamTagName}-ec2